{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRLNCE\\\\000000 Dev Hackathons\\\\Google\\\\02 Agent Development Kit 24 June\\\\Green\\\\greenify-my-city\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// File: client/src/App.tsx\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport EnergyChart from \"./EnergyChart\";\nimport CityAutocomplete from \"./CityAutocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [result, setResult] = useState({\n    energy_mix: {\n      solar: 58,\n      wind: 22,\n      battery: 15,\n      grid: 5\n    },\n    co2_reduction: 1.3,\n    savings_per_month: 16,\n    geji_score: 0.75\n  });\n  const multiAgentIntro = `\n  ## ðŸ§  Multi-Agent Advisory Board\n  - **CLEA:** Clean Energy Expert  \n  - **REA:** Environmental Risk Analyst  \n  - **SEA:** Economic Sustainability Expert  \n  - **UIA:** Urban Innovation Advisor  \n  `;\n  setBrief(multiAgentIntro + briefData.brief);\n  const [brief, setBrief] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const simResponse = await fetch(\"http://127.0.0.1:8000/simulate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          city\n        })\n      });\n      const simData = await simResponse.json();\n      setResult(simData);\n      const briefResponse = await fetch(\"http://127.0.0.1:8000/generate-brief\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          city,\n          result: simData\n        })\n      });\n      const briefData = await briefResponse.json();\n      setBrief(briefData.brief);\n    } catch (error) {\n      console.error(\"Failed to simulate or fetch brief:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF31 Greenify My City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CityAutocomplete, {\n      onSelect: setCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Generate Policy Brief\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), result && /*#__PURE__*/_jsxDEV(EnergyChart, {\n      energyMix: result.energy_mix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }, this), brief && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brief-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Policy Brief:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: brief\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vpqvda+OwTpYF+hdGwWFOh3zic4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactMarkdown","EnergyChart","CityAutocomplete","jsxDEV","_jsxDEV","App","_s","city","setCity","result","setResult","energy_mix","solar","wind","battery","grid","co2_reduction","savings_per_month","geji_score","multiAgentIntro","setBrief","briefData","brief","loading","setLoading","handleSubmit","simResponse","fetch","method","headers","body","JSON","stringify","simData","json","briefResponse","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onClick","energyMix","_c","$RefreshReg$"],"sources":["D:/FRLNCE/000000 Dev Hackathons/Google/02 Agent Development Kit 24 June/Green/greenify-my-city/client/src/App.tsx"],"sourcesContent":["// File: client/src/App.tsx\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport EnergyChart from \"./EnergyChart\";\nimport CityAutocomplete from \"./CityAutocomplete\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [result, setResult] = useState({\n    energy_mix: { solar: 58, wind: 22, battery: 15, grid: 5 },\n    co2_reduction: 1.3,\n    savings_per_month: 16,\n    geji_score: 0.75,\n  });\n\n  const multiAgentIntro = `\n  ## ðŸ§  Multi-Agent Advisory Board\n  - **CLEA:** Clean Energy Expert  \n  - **REA:** Environmental Risk Analyst  \n  - **SEA:** Economic Sustainability Expert  \n  - **UIA:** Urban Innovation Advisor  \n  `;\n\n  setBrief(multiAgentIntro + briefData.brief);\n\n\n  const [brief, setBrief] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const simResponse = await fetch(\"http://127.0.0.1:8000/simulate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ city }),\n      });\n      const simData = await simResponse.json();\n      setResult(simData);\n\n      const briefResponse = await fetch(\"http://127.0.0.1:8000/generate-brief\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ city, result: simData }),\n      });\n      const briefData = await briefResponse.json();\n      setBrief(briefData.brief);\n    } catch (error) {\n      console.error(\"Failed to simulate or fetch brief:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ðŸŒ± Greenify My City</h1>\n      <CityAutocomplete onSelect={setCity} />\n      <button onClick={handleSubmit}>Generate Policy Brief</button>\n      {loading && <p>Loading...</p>}\n      {result && <EnergyChart energyMix={result.energy_mix} />}\n      {brief && (\n        <div className=\"brief-container\">\n          <h2>Generated Policy Brief:</h2>\n          <ReactMarkdown>{brief}</ReactMarkdown>\n        </div>\n      )}\n    </div>\n  );\n}\n\n\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}