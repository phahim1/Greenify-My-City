{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRLNCE\\\\000000 Dev Hackathons\\\\Google\\\\02 Agent Development Kit 24 June\\\\Green\\\\greenify-my-city\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// File: client/src/App.tsx\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport EnergyChart from \"./EnergyChart\";\nimport CityAutocomplete from \"./CityAutocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [strategy, setStrategy] = useState(\"Best Cost\"); // ✅ moved to top level\n  const [result, setResult] = useState({\n    energy_mix: {\n      solar: 58,\n      wind: 22,\n      battery: 15,\n      grid: 5\n    },\n    co2_reduction: 1.3,\n    savings_per_month: 16,\n    geji_score: 0.75\n  });\n  const [brief, setBrief] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const multiAgentIntro = `\n## 🧠 Multi-Agent Advisory Board\n- **CLEA:** City-Level Energy Agent  \n- **REA:** Regional Energy Agent  \n- **SEA:** Sustainability & Emissions Agent  \n- **EPAA:** Energy Poverty Assessment Agent  \n- **GTIA:** Global Technology & Innovation Agent  \n- **GEMA:** Global Energy Market Agent  \n- **GIFA:** Global Investment Fund Agent  \n- **UIA:** User Interaction Agent  \n`;\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      // Step 1: Simulate\n      const simResponse = await fetch(\"http://127.0.0.1:8000/simulate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          city,\n          strategy\n        }) // ✅ strategy passed\n      });\n      const simData = await simResponse.json();\n      setResult(simData);\n\n      // Step 2: Generate Gemini brief\n      const briefResponse = await fetch(\"http://127.0.0.1:8000/generate-brief\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          city,\n          strategy,\n          result: simData\n        }) // ✅ strategy passed\n      });\n      const briefData = await briefResponse.json();\n      setBrief(multiAgentIntro + briefData.brief);\n    } catch (error) {\n      console.error(\"Failed to simulate or fetch brief:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF31 Greenify My City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CityAutocomplete, {\n      onSelect: setCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"1rem 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"strategy\",\n        children: \"Select Strategy: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"strategy\",\n        onChange: e => setStrategy(e.target.value),\n        value: strategy,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Best CO2\",\n          children: \"\\uD83C\\uDF0D Best CO2 Mitigation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Best Cost\",\n          children: \"\\uD83D\\uDCB0 Best Cost Efficiency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Balanced\",\n          children: \"\\u2696\\uFE0F Balanced Justice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Generate Policy Brief\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), result && /*#__PURE__*/_jsxDEV(EnergyChart, {\n      energyMix: result.energy_mix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }, this), brief && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brief-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Policy Brief:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: brief\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCA Summary Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: \"none\",\n            paddingLeft: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"GEJI Score:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), \" \", result.geji_score.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Monthly Savings:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), \" $\", result.savings_per_month.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qwv0xaPxHF55Cs+6lndnJ4jK0PI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactMarkdown","EnergyChart","CityAutocomplete","jsxDEV","_jsxDEV","App","_s","city","setCity","strategy","setStrategy","result","setResult","energy_mix","solar","wind","battery","grid","co2_reduction","savings_per_month","geji_score","brief","setBrief","loading","setLoading","multiAgentIntro","handleSubmit","simResponse","fetch","method","headers","body","JSON","stringify","simData","json","briefResponse","briefData","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","style","margin","htmlFor","id","onChange","e","target","value","onClick","energyMix","listStyleType","paddingLeft","toFixed","_c","$RefreshReg$"],"sources":["D:/FRLNCE/000000 Dev Hackathons/Google/02 Agent Development Kit 24 June/Green/greenify-my-city/client/src/App.tsx"],"sourcesContent":["// File: client/src/App.tsx\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport EnergyChart from \"./EnergyChart\";\nimport CityAutocomplete from \"./CityAutocomplete\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [strategy, setStrategy] = useState(\"Best Cost\"); // ✅ moved to top level\n  const [result, setResult] = useState({\n    energy_mix: { solar: 58, wind: 22, battery: 15, grid: 5 },\n    co2_reduction: 1.3,\n    savings_per_month: 16,\n    geji_score: 0.75,\n  });\n  const [brief, setBrief] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const multiAgentIntro = `\n## 🧠 Multi-Agent Advisory Board\n- **CLEA:** City-Level Energy Agent  \n- **REA:** Regional Energy Agent  \n- **SEA:** Sustainability & Emissions Agent  \n- **EPAA:** Energy Poverty Assessment Agent  \n- **GTIA:** Global Technology & Innovation Agent  \n- **GEMA:** Global Energy Market Agent  \n- **GIFA:** Global Investment Fund Agent  \n- **UIA:** User Interaction Agent  \n`;\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      // Step 1: Simulate\n      const simResponse = await fetch(\"http://127.0.0.1:8000/simulate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ city, strategy }), // ✅ strategy passed\n      });\n      const simData = await simResponse.json();\n      setResult(simData);\n\n      // Step 2: Generate Gemini brief\n      const briefResponse = await fetch(\"http://127.0.0.1:8000/generate-brief\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ city, strategy, result: simData }), // ✅ strategy passed\n      });\n      const briefData = await briefResponse.json();\n\n      setBrief(multiAgentIntro + briefData.brief);\n    } catch (error) {\n      console.error(\"Failed to simulate or fetch brief:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>🌱 Greenify My City</h1>\n      <CityAutocomplete onSelect={setCity} />\n\n      <div style={{ margin: \"1rem 0\" }}>\n        <label htmlFor=\"strategy\">Select Strategy: </label>\n        <select id=\"strategy\" onChange={(e) => setStrategy(e.target.value)} value={strategy}>\n          <option value=\"Best CO2\">🌍 Best CO2 Mitigation</option>\n          <option value=\"Best Cost\">💰 Best Cost Efficiency</option>\n          <option value=\"Balanced\">⚖️ Balanced Justice</option>\n        </select>\n      </div>\n\n      <button onClick={handleSubmit}>Generate Policy Brief</button>\n\n      {loading && <p>Loading...</p>}\n\n      {result && <EnergyChart energyMix={result.energy_mix} />}\n\n      {brief && (\n        <div className=\"brief-container\">\n          <h2>Generated Policy Brief:</h2>\n          <ReactMarkdown>{brief}</ReactMarkdown>\n          <div className=\"metrics-summary\">\n            <h3>📊 Summary Metrics</h3>\n            <ul style={{ listStyleType: \"none\", paddingLeft: 0 }}>\n              <li><strong>GEJI Score:</strong> {result.geji_score.toFixed(2)}</li>\n              <li><strong>Monthly Savings:</strong> ${result.savings_per_month.toFixed(2)}</li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}