{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRLNCE\\\\000000 Dev Hackathons\\\\Google\\\\02 Agent Development Kit 24 June\\\\Green\\\\greenify-clean\\\\client\\\\src\\\\CityAutocomplete.tsx\",\n  _s = $RefreshSig$();\n//client/src/CityAutocomplete.tsx\n\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityAutocomplete = ({\n  onSelect\n}) => {\n  _s();\n  const inputRef = useRef(null);\n  React.useEffect(() => {\n    if (!window.google) return;\n    const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n      types: ['(cities)']\n    });\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      onSelect(place.name || '');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: inputRef,\n    placeholder: \"Enter your city\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_s(CityAutocomplete, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n_c = CityAutocomplete;\nexport default CityAutocomplete;\nvar _c;\n$RefreshReg$(_c, \"CityAutocomplete\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","CityAutocomplete","onSelect","_s","inputRef","useEffect","window","google","autocomplete","maps","places","Autocomplete","current","types","addListener","place","getPlace","name","ref","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FRLNCE/000000 Dev Hackathons/Google/02 Agent Development Kit 24 June/Green/greenify-clean/client/src/CityAutocomplete.tsx"],"sourcesContent":["//client/src/CityAutocomplete.tsx\r\n\r\nimport React, { useRef } from 'react';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    google: any;\r\n  }\r\n}\r\n\r\nconst CityAutocomplete = ({ onSelect }: { onSelect: (city: string) => void }) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!window.google) return;\r\n    const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current!, {\r\n      types: ['(cities)'],\r\n    });\r\n    autocomplete.addListener('place_changed', () => {\r\n      const place = autocomplete.getPlace();\r\n      onSelect(place.name || '');\r\n    });\r\n  }, []);\r\n\r\n  return <input ref={inputRef} placeholder=\"Enter your city\" />;\r\n};\r\n\r\nexport default CityAutocomplete;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQtC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAA+C,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAMC,QAAQ,GAAGN,MAAM,CAAmB,IAAI,CAAC;EAE/CD,KAAK,CAACQ,SAAS,CAAC,MAAM;IACpB,IAAI,CAACC,MAAM,CAACC,MAAM,EAAE;IACpB,MAAMC,YAAY,GAAG,IAAIF,MAAM,CAACC,MAAM,CAACE,IAAI,CAACC,MAAM,CAACC,YAAY,CAACP,QAAQ,CAACQ,OAAO,EAAG;MACjFC,KAAK,EAAE,CAAC,UAAU;IACpB,CAAC,CAAC;IACFL,YAAY,CAACM,WAAW,CAAC,eAAe,EAAE,MAAM;MAC9C,MAAMC,KAAK,GAAGP,YAAY,CAACQ,QAAQ,CAAC,CAAC;MACrCd,QAAQ,CAACa,KAAK,CAACE,IAAI,IAAI,EAAE,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOjB,OAAA;IAAOkB,GAAG,EAAEd,QAAS;IAACe,WAAW,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/D,CAAC;AAACpB,EAAA,CAfIF,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AAiBtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}